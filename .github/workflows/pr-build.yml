name: JavaScript Instrumentation PR Build
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled
    branches:
      - main
      - "release/v*"

permissions:
  id-token: write
  contents: read

jobs:
  changelog-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check CHANGELOG
        run: |
          # Check if PR is from workflows bot or dependabot
          if [[ "${{ github.event.pull_request.user.login }}" == "aws-application-signals-bot" ]]; then
            echo "Skipping check: PR from aws-application-signals-bot"
            exit 0
          fi
          
          if [[ "${{ github.event.pull_request.user.login }}" == "dependabot[bot]" ]]; then
            echo "Skipping check: PR from dependabot"
            exit 0
          fi
          
          # Check for skip changelog label
          if echo '${{ toJSON(github.event.pull_request.labels.*.name) }}' | jq -r '.[]' | grep -q "skip changelog"; then
            echo "Skipping check: skip changelog label found"
            exit 0
          fi
          
          # Fetch base branch and check for CHANGELOG modifications
          git fetch origin ${{ github.base_ref }}
          if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -q "CHANGELOG.md"; then
            echo "CHANGELOG.md entry found - check passed"
            exit 0
          fi
          
          echo "It looks like you didn't add an entry to CHANGELOG.md. If this change affects the SDK behavior, please update CHANGELOG.md and link this PR in your entry. If this PR does not need a CHANGELOG entry, you can add the 'Skip Changelog' label to this PR."
          exit 1

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # ensures the entire test matrix is run, even if one permutation fails
      matrix:
        node: ["14", "16", "18", "20", "22"]
        include:
          - node: 18
            code-coverage: true
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Update npm to a version that supports workspaces (v7 or later)
        if: ${{ matrix.node < 16 }}
        run: npm install -g npm@9 # npm@9 supports node >=14.17.0
      - name: NPM Clean Install
        # https://docs.npmjs.com/cli/v10/commands/npm-ci
        run: npm ci
      - name: Compile all NPM projects
        run: npm run compile
      - name: Build Tarball and Image Files
        uses: ./.github/actions/artifacts_build
        with:
          image_uri_with_tag: pr-build/${{ matrix.node }}
          push_image: false
          load_image: true
          node_version: ${{ matrix.node }}
          package_name: aws-distro-opentelemetry-node-autoinstrumentation
          os: ubuntu-latest
      - name: Build Lambda Layer
        run: npm run build-lambda
      - name: Unit tests (Full)
        run: npm run test:coverage
      - name: Report Coverage
        if: ${{ matrix.code-coverage && !cancelled()}}
        uses: codecov/codecov-action@v4
        with:
          verbose: true

  contract-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: run contract tests
        run: |
          bash ./scripts/build_and_install_distro.sh
          bash scripts/set-up-contract-tests.sh
          pip install pytest
          pytest contract-tests/tests

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - name: Lint
        run: |
          npm run lint
          npm run lint:markdown
          npm run lint:readme
